{"version":3,"file":"lib.modern.mjs","sources":["../src/TypingAnimation.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\ninterface Props {\n  /**\n   * An array of text that you want to display. Required\n   */\n  textArray: string[];\n  /**\n   * The color of the cursor\n   */\n  cursorColor?: string;\n  /**\n   * The color of the text\n   */\n  textColor?: string;\n  /**\n   * The font size of the text\n   */\n  fontSize?: string;\n  /**\n   * The typing speed. Should be an integer\n   */\n  typingSpeed?: number;\n  /**\n   * The delay speed in milliseconds\n   */\n  delaySpeed?: number;\n\n  /**\n   * Enable/disable backspace behavior\n   */\n  backspace?: boolean;\n\n  /**\n   * Height of the container in pixel. Default is 40\n   */\n  height?: string;\n  /**\n   * If you want to stop the animation after one iteration. Required.\n   */\n  loop: boolean;\n}\n\nconst TypingAnimator = (props: Props) => {\n  // ... useState and useEffect here ...\n  const [currentText, setCurrentText] = useState(\"\");\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [forward, setForward] = useState(true);\n  const [delay, setDelay] = useState(false);\n\n  useEffect(() => {\n    if (delay) return;\n    if (!props.loop && currentWordIndex === props.textArray.length - 1) {\n      setCurrentText(props.textArray[currentWordIndex]);\n      return; // Stop the animation\n    }\n    const interval = setInterval(() => {\n      if (forward) {\n        if (currentText === props.textArray[currentWordIndex]) {\n          setDelay(true);\n          setTimeout(() => {\n            setCurrentWordIndex(\n              (currentWordIndex + 1) % props.textArray.length\n            );\n            if (props.backspace) {\n              setForward(false);\n            } else {\n              setCurrentText(\"\");\n            }\n            setDelay(false);\n          }, props.delaySpeed || 1500);\n        } else {\n          setCurrentText(\n            props.textArray[currentWordIndex].slice(0, currentText.length + 1)\n          );\n        }\n      } else {\n        if (currentText === \"\") {\n          setForward(true);\n        } else {\n          setCurrentText(currentText.slice(0, currentText.length - 1));\n        }\n      }\n    }, props.typingSpeed || 200);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentText, currentWordIndex, forward, delay, props]);\n\n  return (\n    <div\n      className=\"typing-container\"\n      style={{\n        fontSize: props.fontSize || \"1rem\",\n        color: props.textColor || \"black\",\n        height: props.height || \"40px\",\n      }}\n    >\n      {currentText}\n      <span\n        className=\"cursor\"\n        style={{\n          backgroundColor: props.cursorColor || \"black\",\n        }}\n      >\n        |\n      </span>\n    </div>\n  );\n};\n\nexport default TypingAnimator;\n"],"names":["TypingAnimator","props","currentText","setCurrentText","useState","currentWordIndex","setCurrentWordIndex","forward","setForward","delay","setDelay","useEffect","loop","textArray","length","interval","setInterval","setTimeout","backspace","delaySpeed","slice","typingSpeed","clearInterval","React","createElement","className","style","fontSize","color","textColor","height","backgroundColor","cursorColor"],"mappings":"mDA4CM,MAAAA,EAAkBC,IAEtB,MAAOC,EAAaC,GAAkBC,EAAS,KACxCC,EAAkBC,GAAuBF,EAAS,IAClDG,EAASC,GAAcJ,GAAS,IAChCK,EAAOC,GAAYN,GAAS,GA0CnC,OAxCAO,EAAU,KACR,GAAIF,EAAO,OACX,IAAKR,EAAMW,MAAQP,IAAqBJ,EAAMY,UAAUC,OAAS,EAE/D,YADAX,EAAeF,EAAMY,UAAUR,IAGjC,MAAMU,EAAWC,YAAY,KACvBT,EACEL,IAAgBD,EAAMY,UAAUR,IAClCK,GAAS,GACTO,WAAW,KACTX,GACGD,EAAmB,GAAKJ,EAAMY,UAAUC,QAEvCb,EAAMiB,UACRV,GAAW,GAEXL,EAAe,IAEjBO,GAAS,EACX,EAAGT,EAAMkB,YAAc,OAEvBhB,EACEF,EAAMY,UAAUR,GAAkBe,MAAM,EAAGlB,EAAYY,OAAS,IAIhD,KAAhBZ,EACFM,GAAW,GAEXL,EAAeD,EAAYkB,MAAM,EAAGlB,EAAYY,OAAS,GAE5D,EACAb,EAAMoB,aAAe,KAExB,MAAO,KACLC,cAAcP,GAChB,EACC,CAACb,EAAaG,EAAkBE,EAASE,EAAOR,iBAGjDsB,EACEC,cAAA,MAAA,CAAAC,UAAU,mBACVC,MAAO,CACLC,SAAU1B,EAAM0B,UAAY,OAC5BC,MAAO3B,EAAM4B,WAAa,QAC1BC,OAAQ7B,EAAM6B,QAAU,SAGzB5B,eACDqB,EAAAC,cAAA,OAAA,CACEC,UAAU,SACVC,MAAO,CACLK,gBAAiB9B,EAAM+B,aAAe,UAInC,KAAA"}