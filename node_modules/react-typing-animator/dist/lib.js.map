{"version":3,"file":"lib.js","sources":["../src/TypingAnimation.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\ninterface Props {\n  /**\n   * An array of text that you want to display. Required\n   */\n  textArray: string[];\n  /**\n   * The color of the cursor\n   */\n  cursorColor?: string;\n  /**\n   * The color of the text\n   */\n  textColor?: string;\n  /**\n   * The font size of the text\n   */\n  fontSize?: string;\n  /**\n   * The typing speed. Should be an integer\n   */\n  typingSpeed?: number;\n  /**\n   * The delay speed in milliseconds\n   */\n  delaySpeed?: number;\n\n  /**\n   * Enable/disable backspace behavior\n   */\n  backspace?: boolean;\n\n  /**\n   * Height of the container in pixel. Default is 40\n   */\n  height?: string;\n  /**\n   * If you want to stop the animation after one iteration. Required.\n   */\n  loop: boolean;\n}\n\nconst TypingAnimator = (props: Props) => {\n  // ... useState and useEffect here ...\n  const [currentText, setCurrentText] = useState(\"\");\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [forward, setForward] = useState(true);\n  const [delay, setDelay] = useState(false);\n\n  useEffect(() => {\n    if (delay) return;\n    if (!props.loop && currentWordIndex === props.textArray.length - 1) {\n      setCurrentText(props.textArray[currentWordIndex]);\n      return; // Stop the animation\n    }\n    const interval = setInterval(() => {\n      if (forward) {\n        if (currentText === props.textArray[currentWordIndex]) {\n          setDelay(true);\n          setTimeout(() => {\n            setCurrentWordIndex(\n              (currentWordIndex + 1) % props.textArray.length\n            );\n            if (props.backspace) {\n              setForward(false);\n            } else {\n              setCurrentText(\"\");\n            }\n            setDelay(false);\n          }, props.delaySpeed || 1500);\n        } else {\n          setCurrentText(\n            props.textArray[currentWordIndex].slice(0, currentText.length + 1)\n          );\n        }\n      } else {\n        if (currentText === \"\") {\n          setForward(true);\n        } else {\n          setCurrentText(currentText.slice(0, currentText.length - 1));\n        }\n      }\n    }, props.typingSpeed || 200);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentText, currentWordIndex, forward, delay, props]);\n\n  return (\n    <div\n      className=\"typing-container\"\n      style={{\n        fontSize: props.fontSize || \"1rem\",\n        color: props.textColor || \"black\",\n        height: props.height || \"40px\",\n      }}\n    >\n      {currentText}\n      <span\n        className=\"cursor\"\n        style={{\n          backgroundColor: props.cursorColor || \"black\",\n        }}\n      >\n        |\n      </span>\n    </div>\n  );\n};\n\nexport default TypingAnimator;\n"],"names":["props","_useState","useState","currentText","setCurrentText","_useState2","currentWordIndex","setCurrentWordIndex","_useState3","forward","setForward","_useState4","delay","setDelay","useEffect","loop","textArray","length","interval","setInterval","setTimeout","backspace","delaySpeed","slice","typingSpeed","clearInterval","React","createElement","className","style","fontSize","color","textColor","height","backgroundColor","cursorColor"],"mappings":"sIA4CuB,SAACA,GAEtB,IAAAC,EAAsCC,EAAAA,SAAS,IAAxCC,EAAWF,KAAEG,EAAcH,EAClC,GAAAI,EAAgDH,EAAQA,SAAC,GAAlDI,EAAgBD,EAAA,GAAEE,EAAmBF,KAC5CG,EAA8BN,YAAS,GAAhCO,EAAOD,EAAEE,GAAAA,EAAUF,EAAA,GAC1BG,EAA0BT,EAAAA,UAAS,GAA5BU,EAAKD,EAAA,GAAEE,EAAQF,KA0CtB,OAxCAG,EAASA,UAAC,WACR,IAAIF,EAAJ,CACA,GAAKZ,EAAMe,MAAQT,IAAqBN,EAAMgB,UAAUC,OAAS,EAAjE,CAIA,IAAMC,EAAWC,YAAY,WACvBV,EACEN,IAAgBH,EAAMgB,UAAUV,IAClCO,GAAS,GACTO,WAAW,WACTb,GACGD,EAAmB,GAAKN,EAAMgB,UAAUC,QAEvCjB,EAAMqB,UACRX,GAAW,GAEXN,EAAe,IAEjBS,GAAS,EACX,EAAGb,EAAMsB,YAAc,OAEvBlB,EACEJ,EAAMgB,UAAUV,GAAkBiB,MAAM,EAAGpB,EAAYc,OAAS,IAIhD,KAAhBd,EACFO,GAAW,GAEXN,EAAeD,EAAYoB,MAAM,EAAGpB,EAAYc,OAAS,GAG/D,EAAGjB,EAAMwB,aAAe,KAExB,kBACEC,cAAcP,EAChB,CAhCC,CAFCd,EAAeJ,EAAMgB,UAAUV,GAFtB,CAqCb,EAAG,CAACH,EAAaG,EAAkBG,EAASG,EAAOZ,iBAGjD0B,EACE,QAAAC,cAAA,MAAA,CAAAC,UAAU,mBACVC,MAAO,CACLC,SAAU9B,EAAM8B,UAAY,OAC5BC,MAAO/B,EAAMgC,WAAa,QAC1BC,OAAQjC,EAAMiC,QAAU,SAGzB9B,eACDuB,EAAAA,QAAAC,cAAA,OAAA,CACEC,UAAU,SACVC,MAAO,CACLK,gBAAiBlC,EAAMmC,aAAe,UAInC,KAGb"}